<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">      
      <section name="APIManager.SparxEA.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false"/>
      <section name="APIManager.EAAddin.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false"/>
    </sectionGroup>
  </configSections>
  <uri>
    <schemeSettings>
      <add name="http" genericUriParserOptions="DontUnescapePathDotsAndSlashes"/>
      <add name="https" genericUriParserOptions="DontUnescapePathDotsAndSlashes"/>
    </schemeSettings>
  </uri>
  <startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.1"/>
	</startup>
  <userSettings>
    <APIManager.SparxEA.Properties.Settings>
      <setting name="LogfileName" serializeAs="String">
        <value>C:\Temp\APIManagerLog.txt</value>
      </setting>
      <setting name="UseLogfile" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="CLAddSourceEnumsToDiagram" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="CLAddCodeTypesToDiagram" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="SMAddMessageAssemblyToDiagram" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="SMCreateCommonSchema" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="SMUseMessageHeaders" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="SMUseSecurityLevels" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DEBusinessTermName" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DEDefinition" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DEDictionaryEntryName" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DEUniqueID" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DENotes" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DiagramSaveType" serializeAs="String">
        <value>.jpg</value>
      </setting>
      <setting name="SaveMessageDiagrams" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="InterfaceContractType" serializeAs="String">
        <value>SOAP</value>
      </setting>
      <setting name="SMAddBusinessMsgToDiagram" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="DocGenUseCommon" serializeAs="String">
        <value>True</value>
      </setting>
      <setting name="RESTAuthAPIKeys" serializeAs="String">
        <value />
      </setting>
      <setting name="RESTAuthScheme" serializeAs="String">
        <value>OAuth2</value>
      </setting>
      <setting name="RESTAuthOAuth2Flow" serializeAs="String">
        <value>AuthorizationCode</value>
      </setting>
      <setting name="RESTHostName" serializeAs="String">
        <value>api.enexis.nl</value>
      </setting>
      <setting name="RESTSchemes" serializeAs="String">
        <value>https</value>
      </setting>
      <setting name="PersistentModelLocks" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="UseAutomaticLocking" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="SupplementaryPrefix" serializeAs="String">
        <value>_</value>
      </setting>
      <setting name="DocGenGenerateDoc" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="UseConfigurationManagement" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="GITIgnoreEntries" serializeAs="String">
        <value />
      </setting>
      <setting name="RepositoryDescriptorList" serializeAs="String">
        <value />
      </setting>
      <setting name="JSONAllOfSupport" serializeAs="String">
        <value>False</value>
      </setting>
      <setting name="GENUseMajorVersionOnly" serializeAs="String">
        <value>False</value>
      </setting>
    </APIManager.SparxEA.Properties.Settings>
  </userSettings>
  <appSettings>
    <!-- Namespace definitions... -->
    <!-- Available placeholders:
         @MAJORVSN@      = Service Major version number;
         @MINORVSN@      = Component minor version number as provided as argument. If specified as '-1', the minor version of the service is used instead.
         @BUSINESSFN@    = The business function identifier associated with the service (identified by the 'ID' tag in a parent package).
         @CONTAINER@     = The name of the functional container in which the service is defined.
         @SERVICE@       = The name of the service.
         @CAPABILITY@    = Capability name (e.g. Operation name, Common Schema name, etc.).
         @OPERSTATUS@    = The operational status of the service.
         @YEAR@          = The current year.
         @MONTH@         = The current month.
    -->
    <!-- NamespacePrefix represents the generic ECDM namespace. -->
    <add key="NamespacePrefix" value="urn:x-enexis:ecdm"/>
    <add key="SOAPNamespacePrefix" value="%NamespacePrefix%"/>
    <!-- Enexis-specific definitions...-->
    <add key="RootPkgName" value="ECDMRoot"/>
    <add key="RESTNamespacePrefix" value="http://ecdm.enexis.nl/schemas/json"/>
    <add key="SOAPInterface:NSTemplate" value="%SOAPNamespacePrefix%:@BUSINESSFN@:@CONTAINER@:@SERVICE@:@MAJORVSN@:@OPERSTATUS@"/>
    <add key="SOAPOperation:NSTemplate" value="%SOAPNamespacePrefix%:@BUSINESSFN@:@CONTAINER@:@SERVICE@:@CAPABILITY@:@MAJORVSN@:@OPERSTATUS@"/>
    <add key="AlternativeCommonNS:NSTemplate" value="%SOAPNamespacePrefix%:@BUSINESSFN@:@CONTAINER@:Common:@MAJORVSN@:@OPERSTATUS@"/>
    <add key="RESTInterface:NSTemplate" value="%RESTNamespacePrefix%/@SERVICE@/@MAJORVSN@/@OPERSTATUS@"/>
    <add key="RESTOperation:NSTemplate" value="%RESTNamespacePrefix%/@SERVICE@/@CAPABILITY@/@MAJORVSN@/@OPERSTATUS@"/>
    <!---->
    <!-- REST OAuth link definitions -->
    <add key="OAuthURL" value="https://oauth.enexis.nl/authorize"/>
    <add key="OAuthTokenURL" value="https://oauth.enexis.nl/tokens"/>
    <add key="OAuthRefreshURL" value="https://oauth.enexis.nl/refresh"/>
    <!---->
    <!-- REST Default Header parameters settings -->
    <add key="RESTHeaderParamClassName" value="HeaderParametersType"/>
    <add key="RESTHeaderParamClassStereotype" value="Enexis ECDM::MBIE"/>
    <add key="RESTUseHeaderParametersTag" value="useHeaderParameters"/>
    <add key="RESTUseLinkHeaderTag" value="useLinkHeaders"/>
    <!---->
    <!-- Generic definitions...-->
    <add key="CodeListSet:NSTemplate" value="%SOAPNamespacePrefix%:@BUSINESSFN@:@CONTAINER@:@SERVICE@:@MAJORVSN@:@OPERSTATUS@"/>
    <add key="CodeList:NSTemplate" value="%SOAPNamespacePrefix%:@BUSINESSFN@:@CONTAINER@:@SERVICE@:@CAPABILITY@:@MAJORVSN@.@MINORVSN@:@OPERSTATUS@"/>
    <add key="XMLSchemaStdNamespace" value="http://www.w3.org/2001/XMLSchema"/>
    <add key="SOAP11EnvelopeNamespace" value="http://schemas.xmlsoap.org/soap/envelope/"/>
    <add key="SOAP11EnvelopeSchemaFilename" value="SoapEnvelope_v11.xsd"/>
    <add key="JSONSchemaStdNamespace" value="http://json-schema.org/draft-04/schema#"/>
    <add key="JMSNamespace" value="http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS"/>
    <add key="JMSTransport" value="%JMSNamespace%"/>
    <add key="XMLSchemaStdNamespaceToken" value="xs"/>
    <add key="JMSNamespaceToken" value="jms"/>
    <add key="nsTokenPrefix" value="ns"/>
    <add key="UniqueIDPrefix" value="uid"/>
    <!---->
    <!-- ASCIIDoc settings as well as templates for single lines...-->
    <!-- RootNumber = The chapter numbers used at the top-level of all operation definitions. -->
    <!-- RootLevel = The initial indentation level of the top-level of all operation definitions. -->
    <add key="ASCIIDocRootNumber" value="02"/>
    <add key="ASCIIDocRootLevel" value="2"/>
    <add key="ASCIIDocAttribute" value="|*@NAME@* | &lt;&lt;@CLASSIFIERANCHOR@,@CLASSIFIER@&gt;&gt; | @CARDINALITY@ | @PRESENCE@. @NOTES@"/>
    <add key="ASCIIDocTypeRow" value="|*@PRIMNAME@@FACET@* | @TYPENOTES@"/>
    <add key="ASCIIDocSupplementaryRow" value="|*@SUPNAME@[@SUPTYPE@]* | @TYPENOTES@"/>
    <add key="ASCIIDocEnumValue" value="|*@ENUMNAME@* | @TYPENOTES@"/>
    <add key="ASCIIDocXREF" value="@NAME@ is used by: @XREF@"/>
    <!---->
    <!-- Definitions for the 'external schema reference' type...-->
    <add key="ExternalSchemaCDTTypeName" value="ExternalSchemaType"/>
    <add key="ExternalSchemaNSAttribute" value="namespace"/>
    <add key="ExternalSchemaNSTokenAttribute" value="namespaceToken"/>
    <add key="ExternalSchemaAttribute" value="schema"/>
    <add key="ExternalSchemaBaseTypeAttribute" value="baseType"/>
    <add key="ExternalSchemaMinOccAttribute" value="minOcc"/>
    <add key="ExternalSchemaMaxOccAttribute" value="maxOcc"/>
    <!---->
    <!-- The name of the top-level menu that we want to expose to EA... -->
    <add key="TopLevelMenuName" value="API Manager"/>
    <!---->
    <!-- The name of the output tab to use for logging... -->
    <add key="SystemOutputTabName" value="APIManager"/>
    <!---->
    <!-- This number defines attribute separation within class hierarchies...-->
    <add key="HierarchyOffset" value="10000"/>
    <!---->
    <!-- Defines the position of sub-packages in a Service Declaration -->
    <add key="ReleaseHistoryPos" value="10"/>
    <add key="ServiceModelPos" value="20"/>
    <add key="CommonDefnPos" value="50"/>
    <add key="OperationPos" value="100"/>
    <add key="DataModelPos" value="50"/>
    <!---->
    <!-- Tag- and value definition that define the archetype of a service... -->
    <add key="ServiceArchetypeTag" value="archetype"/>
    <add key="ServiceArchetypeSOAP" value="SOAP"/>
    <add key="ServiceArchetypeREST" value="REST"/>
    <add key="ServiceArchetypeMessage" value="Message"/>
    <add key="ServiceArchetypeCodeList" value="CodeList"/>
    <!---->
    <!-- Tag- and value definitions that define the scope of a class within a service definition...-->
    <add key="ClassScopeTag" value="scope"/>
    <add key="ClassScopeInterface" value="Interface"/>
    <add key="ClassScopeOperation" value="Operation"/>
    <add key="ClassScopeMessage" value="Message"/>
    <!---->
    <!-- Tag names referenced from application...-->
    <add key="BusinessFunctionIDTag" value="ID"/>
    <add key="ServiceOperationalStatusTag" value="operationalStatus"/>
    <add key="ExpandBDTSuppTag" value="useSupplementaries"/>
    <add key="ChoiceKeyTag" value="choiceGroup"/>
    <add key="SequenceKeyTag" value="sequenceKey"/>
    <add key="NillableTag" value="nillable"/>
    <add key="UseAlternativeNamingTag" value="useAlternativeNaming"/>
    <add key="UseSOAPFaultsTag" value="useSOAPFaults"/>
    <add key="UseListElementsTag" value="useListElements"/>
    <!---->
    <!-- Tag- and value definitions for configuration management... -->
    <add key="CMStateTag" value="CMState"/>
    <add key="CMBranchTag" value="CMBranch"/>
    <add key="CMDefaultState" value="Disabled"/>
    <add key="CMGITConfigTokens" value="core.filemode:false, core.autocrlf:false"/>
    <add key="CMRemoteGITExtension" value=".git"/>
    <add key="CMGitLabAPIURLSuffix" value="api/v4"/>
    <add key="CommitIDLeader" value="CommitID --&gt; "/>
    <add key="CMRepoCreateMessage" value="Local repository created"/>
    <add key="CMReleaseBranchName" value="master"/>
    <add key="CMFeatureBranchPrefix" value="feature"/>
    <add key="CMArtefactsFolderName" value="Artefacts"/>
    <add key="CMSnapshotsFolderName" value="Snapshots"/>
    <add key="CMDocumentsFolderName" value="Documents"/>
    <!---->
    <!-- Tag- and value definitions for attribute timestamp generation... -->
    <add key="IsValidFromTag" value="isValidFrom"/>
    <add key="IsValidUntilTag" value="isValidUntil"/>
    <add key="UseValidTimestampTag" value="useValidTimestamp"/>
    <add key="ValidFromAttribName" value="validFrom"/>
    <add key="ValidUntilAttribName" value="validUntil"/>
    <add key="DefaultValidDataTypeXSD" value="date"/>
    <add key="ExtendedValidDataTypeXSD" value="dateTime"/>
    <add key="DefaultValidDataTypeJSON" value="date"/>
    <add key="ExtendedValidDataTypeJSON" value="date-time"/>
    <!---->
    <!-- Tag- and value definitions for release management... -->
    <add key="RMTicketFQNTag" value="ticketFQN"/>
    <add key="RMPackageName" value="ReleaseHistory"/>
    <add key="RMPackageStereotype" value="Enexis ECDM::LOM"/>
    <add key="RMReleasePackageParentPath" value="%RootPkgName%"/>
    <add key="RMReleasePackageParentName" value="%DomainModelsRootPkgName%"/>
    <add key="RMReleasePackagePath" value="%DomainModelsRootPkgName%:ReleaseHistory"/>
    <add key="RMTicketStereotype" value="Enexis ECDM::Ticket"/>
    <add key="RMReleaseStereotype" value="Enexis ECDM::Release"/>
    <add key="RMAssociationStereotype" value="Enexis ECDM::ReleaseMgmt"/>
    <add key="RMTimelineParentRole" value="Previous"/>
    <add key="RMTimelineChildRole" value="Next"/>
    <add key="RMHierarchySubordinateRole" value="Subordinate"/>
    <add key="RMHierarchyMasterRole" value="Master"/>
    <add key="RMReleaseRole" value="Release"/>
    <add key="RMTicketRole" value="Ticket"/>
    <add key="RMRootTicketRole" value="RootTicket"/>
    <add key="RMServiceRole" value="Service"/>
    <add key="RMTypeCodeTag" value="typeCode"/>
    <add key="RMCreationTimestampTag" value="creationTimestamp"/>
    <add key="RMModificationTimestampTag" value="modificationTimestamp"/>
    <add key="RMProjectOrderIDTag" value="projectOrderID"/>
    <add key="RMTicketIDTag" value="ticketID"/>
    <add key="RMExternalPriorityTag" value="externalPriority"/>
    <add key="RMExternalStatusCodeTag" value="externalStatusCode"/>
    <add key="RMReleasedVersionTag" value="releasedVersion"/>
    <add key="RMReleaseVersionNumberTag" value="version"/>
    <add key="RMReleaseIDPrefix" value="release"/>
    <!---->
    <!-- Stereotypes used to differentiate between different attribute- and classifier types...-->
    <add key="SupplementaryAttStereotype" value="Enexis ECDM::Supplementary"/>
    <add key="FacetAttStereotype" value="Enexis ECDM::Facet"/>
    <add key="ContentAttStereotype" value="Enexis ECDM::Content"/>
    <add key="MetaTypeComplexDataType" value="ComplexType"/>
    <add key="MetaTypeSimpleDataType" value="SimpleType"/>
    <add key="MetaTypeEnumeration" value="Enumeration"/>
    <add key="MetaTypeUnion" value="Union"/>
    <add key="MetaTypeExtSchema" value="ExternalSchemaType"/>
    <add key="UMLEnumerationStereotype" value="enum"/>
    <add key="SuppressEnumTag" value="suppressEnumeration"/>
    <add key="SuppressEnumClassifier" value="CodeType"/>
    <!---->
    <!-- Stereotypes used to differentiate between different (business) data types...-->
    <add key="SimpleBDTStereotype" value="Enexis ECDM::BDTSimpleType"/>
    <add key="ComplexBDTStereotype" value="Enexis ECDM::BDTComplexType"/>
    <add key="BDTUnionStereotype" value="Enexis ECDM::BDTUnion"/>
    <add key="BDTEnumStereotype" value="Enexis ECDM::BDTEnumeration"/>
    <!---->
    <!-- Some stereotypes needed for associations...-->
    <add key="GeneralizationStereotype" value="Enexis ECDM::DerivedFrom"/>
    <add key="AssociationStereotype" value="Enexis ECDM::_ASBIE"/>
    <add key="MessageAssociationStereotype" value="Enexis ECDM::ASMBIE"/>
    <add key="TraceAssociationStereotype" value="trace"/>
    <!---->
    <!-- Names, Tags and Stereotypes associated with the service capability model...-->
    <add key="NSTokenTag" value="nsToken"/>
    <add key="GenericMessagePkgStereotype" value="Enexis ECDM::CCMA"/>
    <add key="GenericMessageClassStereotype" value="Enexis ECDM::MBIE"/>
    <add key="ServiceClassStereotype" value="Enexis ECDM::Service"/>
    <add key="ServiceParentClassName" value="ServiceRootType"/>
    <add key="RequestParentClassName" value="RequestMessageRootType"/>
    <add key="ResponseParentClassName" value="ResponseMessageRootType"/>
    <add key="ServiceCapabilityClassBaseStereotype" value="Enexis ECDM::ServiceCapability"/>
    <add key="OperationClassStereotype" value="Enexis ECDM::Operation"/>
    <add key="InterfaceContractClassStereotype" value="Enexis ECDM::InterfaceContract"/>
    <add key="CommonSchemaClassStereotype" value="Enexis ECDM::CommonSchema"/>
    <add key="CommonSchemaClassName" value="CommonSchema"/>
    <add key="CommonSchemaRoleName" value="Common"/>
    <add key="CommonSchemaNSToken" value="cmn"/>
    <add key="MessageAssemblyPkgStereotype" value="Enexis ECDM::CCMA"/>
    <add key="BusinessMessageClassStereotype" value="Enexis ECDM::BusinessMessage"/>
    <add key="MessageAssemblyClassStereotype" value="Enexis ECDM::MessageAssembly"/>
    <add key="MessageAssemblyRoleName" value="Body"/>
    <add key="MessageHeaderRoleName" value="Header"/>
    <add key="RequestMessageAssemblyClassName" value="RequestBodyType"/>
    <add key="ResponseMessageAssemblyClassName" value="ResponseBodyType"/>
    <add key="RequestMessageRoleName" value="Request"/>
    <add key="ResponseMessageRoleName" value="Response"/>
    <add key="RequestMessageSuffix" value="Request"/>
    <add key="ResponseMessageSuffix" value="Response"/>
    <add key="CodeListClassStereotype" value="Enexis ECDM::CodeList"/>
    <add key="ServiceDeclPkgStereotype" value="Enexis ECDM::ServiceDeclaration"/>
    <add key="CodeListDeclPkgStereotype" value="Enexis ECDM::CodeListDeclaration"/>
    <add key="ServiceContainerPkgStereotype" value="Enexis ECDM::ServiceContainer"/>
    <add key="ServiceOperationPkgStereotype" value="Enexis ECDM::ServiceOperation"/>
    <add key="ServiceModelPkgName" value="ServiceModel"/>
    <add key="ServiceModelDiagramName" value="ServiceModel"/>
    <add key="ServiceModelPkgStereotype" value="Enexis ECDM::LOM"/>
    <add key="CommonPkgName" value="Common"/>
    <add key="CommonPkgStereotype" value="Enexis ECDM::CCMA"/>
    <add key="RequestPkgName" value="Request"/>
    <add key="RequestPkgStereotype" value="Enexis ECDM::CCMA"/>
    <add key="ResponsePkgName" value="Response"/>
    <add key="ResponsePkgStereotype" value="Enexis ECDM::CCMA"/>
    <add key="CodeListPkgName" value="CodeLists"/>
    <add key="CodeListPkgStereotype" value="Enexis ECDM::LOM"/>
    <add key="MessageScopeTag" value="scope"/>
    <add key="DefaultMessageScope" value="Operation"/>
    <add key="SequenceKeyTag" value="sequenceKey"/>
    <add key="MessageBodyDefaultSequence" value="500"/>
    <add key="OperationIDTag" value="operationID"/>
    <add key="MaxOperationIDTag" value="maxOperationID"/>
    <add key="ResourceCollectionPkgStereotype" value="Enexis ECDM::RESTFlow"/>
    <add key="ResourceClassStereotype" value="Enexis ECDM::RESTResource"/>
    <!---->
    <!-- Interface contract type definitions...-->
    <add key="InterfaceContractTypeTag" value="contractType"/>
    <add key="InterfaceDefaultSOAPContract" value="WSDL:Abstract"/>
    <add key="InterfaceDefaultRESTContract" value="REST:OpenAPI_2.0"/>
    <!---->
    <!-- REST-specific definitions...-->
    <add key="DataModelPkgName" value="DataModel"/>
    <add key="DataModelPkgStereotype" value="Enexis ECDM::LOM"/>
    <add key="SchemaTokenName" value="def"/>
    <add key="ArchetypeTag" value="archetype"/>
    <add key="TagNamesTag" value="tagNames"/>
    <add key="IsRootLevelTag" value="isRootLevel"/>
    <add key="ConsumesMIMEListTag" value="consumesMIMEList"/>
    <add key="ProducesMIMEListTag" value="producesMIMEList"/>
    <add key="DefaultMIMEList" value="application/json"/>
    <add key="RESTOperationClassStereotype" value="Enexis ECDM::RESTOperation"/>
    <add key="RESTOperationPkgStereotype" value="Enexis ECDM::ServiceOperation"/>
    <add key="RESTParameterStereotype" value="RESTParameter"/>
    <add key="RESTOperationResultStereotype" value="RESTOperationResult"/>
    <add key="CollectionFormatTag" value="collectionFormat"/>
    <add key="ParameterScopeTag" value="parameterScope"/>
    <add key="AllowEmptyParameterValueTag" value="allowEmptyValue"/>
    <add key="IdentifierResourceRoleName" value="ResourceID"/>
    <add key="EmptyResourceName" value="[Empty]"/>
    <add key="RequestHdrParamClassName" value="RequestHeaderParametersType"/>
    <add key="ResponseHdrParamClassName" value="ResponseHeaderParametersType"/>
    <add key="RequestPaginationClassName" value="RequestPaginationType"/>
    <add key="ResponsePaginationClassName" value="ResponsePaginationType"/>
    <add key="SigningClassName" value="ClearTextJWSType"/>
    <add key="EncryptionClassName" value="LightweightJWEType"/>
    <add key="RequestSigningRoleName" value="RequestSigner"/>
    <add key="ResponseSigningRoleName" value="ResponseSigner"/>
    <add key="RequestEncryptionRoleName" value="RequestEncrypter"/>
    <add key="ResponseEncryptionRoleName" value="ResponseEncrypter"/>
    <add key="PaginationClassStereotype" value="Enexis ECDM::MBIE"/>
    <add key="PaginationRoleName" value="Pagination"/>
    <add key="OperationResultClassName" value="OperationResultType"/>
    <add key="OperationResultRoleName" value="OperationResult"/>
    <add key="OperationResultPrefix" value="OperationResult"/>
    <add key="ResultCodeAttributeName" value="Code"/>
    <add key="ResultCodeAttributeClassifier" value="CodeType"/>
    <add key="DefaultResponseCode" value="default"/>
    <add key="DefaultResponseDescription" value="Default 'catch-all' result code."/>
    <add key="DefaultSuccessCode" value="200"/>
    <add key="AltSuccessCode" value="201"/>
    <add key="DefaultSuccessEditCode" value="201"/>
    <add key="DefaultClientErrorCode" value="400"/>
    <add key="DefaultServerErrorCode" value="500"/>
    <add key="CodeCollectionStereotype" value="RESTResponseCodeCollection"/>
    <add key="RESTResponseCodeAttributeClassifier" value="CodeType"/>
    <!---->
    <!-- OpenAPI attribute- and type definitions... -->
    <add key="ContactTypeClassName" value="OpenAPIContactType"/>
    <add key="LicenseTypeClassName" value="OpenAPILicenseType"/>
    <add key="DocumentationTypeClassName" value="OpenAPIDocumentationType"/>
    <add key="TermsOfServiceAttributeName" value="TermsOfService"/>
    <!---->
    <!-- HTTP Operations versus REST Resource types... -->
    <add key="Resource:Collection" value="Post,Put,Get,Delete"/>
    <add key="Resource:Store" value="Post,Get,Delete"/>
    <add key="Resource:Controller" value="Post,Patch"/>
    <add key="Resource:Document" value=""/>
    <add key="Resource:Identifier" value="Post,Get,Delete,Patch,Put"/>
    <add key="Resource:Unknown" value="Delete,Post,Get,Patch,Put"/>
    <!---->
    <!-- Tokens and tag names used to construct a CodeList (or set of CodeLists)...-->
    <add key="AgencyIDToken" value="identificationScheme.UniformResource"/>
    <add key="AgencyNameToken" value="identificationScheme.Name"/>
    <add key="TypeCodeToken" value="typeCode"/>
    <add key="AgencyIDTypeCode" value="AgencyIdentifier"/>
    <add key="CodeListNameAttribute" value="CodeList.Name"/>
    <add key="CodeListAgencyIDAttribute" value="CodeList.Agency"/>
    <add key="CodeListAgencyNameAttribute" value="CodeList.AgencyName"/>
    <add key="CodeListVersionAttribute" value="CodeList.Version"/>
    <add key="CodeListURNAttribute" value="CodeList.UniformResource"/>
    <add key="EnexisIdentifierName" value="Enexis"/>
    <!---->
    <!-- Tag names for element metadata... -->
    <add key="BusinessTermNameTag" value="businessTermName"/>
    <add key="DefinitionTag" value="definition"/>
    <add key="DictionaryEntryNameTag" value="dictionaryEntryName"/>
    <add key="DisplayNameTag" value="displayName"/>
    <add key="UniqueIDTag" value="uniqueID"/>
    <!---->
    <!-- Tag names used by Capabilities to store file- and path names...-->
    <add key="FileNameTag" value="fileName"/>
    <add key="PathNameTag" value="pathName"/>
    <!---->
    <!-- Stereotypes that can be used to determine a specific level in the type hierarchy...-->
    <!-- Logical Data Types are EITHER Business- OR Core data types. -->
    <add key="BusinessComponentStereotype" value="Enexis ECDM::BusinessComponent"/>
    <add key="BusinessDataTypeStereotype" value="Enexis ECDM::BDT"/>
    <add key="CoreDataTypeStereotype" value="Enexis ECDM::CDT"/>
    <add key="PrimitiveDataTypeStereotype" value="Enexis ECDM::PRIM"/>
    <add key="LogicalDataTypeStereotype" value="Enexis ECDM::LDT"/>
    <add key="CoreDataTypeEnumStereotype" value="Enexis ECDM::CDTEnumeration"/>
    <add key="PrimDataTypeEnumStereotype" value="Enexis ECDM::PRIMEnumeration"/>
    <add key="BusinessDataTypeEnumStereotype" value="Enexis ECDM::BDTEnumeration"/>
    <!---->
    <!-- Tag that indicates whether we have to grab Supplementary and/or Facet attributes from this class...-->
    <add key="UseFacetsAndSupplementariesTag" value="useSupplementaries"/>
    <!---->
    <!-- Privacy settings: level settings consist of a list of tuples {numeric value ":" string value} -->
    <add key="AccessLevelTag" value="accessLevel"/>
    <add key="AccessLevels" value="0:Public,1:InternalUse,2:Confidential,3:Secret"/>
    <!---->
    <!-- Definitions that are related to the structure of our repository... -->
    <add key="FrameworkRootPath" value="%RootPkgName%:Framework"/>
    <add key="DomainRootPath" value="%RootPkgName%:DomainModels"/>
    <add key="IdentifiersPkgName" value="Identifiers"/>
    <add key="DomainModelsRootPkgName" value="DomainModels"/>
    <add key="TemplatePkgName" value="%FrameworkRootPath%:Extensions:Templates"/>
    <add key="CoreDataTypesPathName" value="%FrameworkRootPath%:CoreModels:CoreDataTypes"/>
    <add key="PrimDataTypesPathName" value="%FrameworkRootPath%:CoreModels:PrimitiveDataTypes"/>
    <add key="ServiceSupportModelPathName" value="%FrameworkRootPath%:Extensions:ExtensionPackages:ServiceSupportModel_V1.0"/>
    <add key="APISupportModelPathName" value="%FrameworkRootPath%:Extensions:ExtensionPackages:APISupportModel"/>
    <add key="RESTResponseCodeCollectionsPathName" value="%TemplatePkgName%"/>
    <add key="RESTResponseCodeCollectionsPkgName" value="RESTResponseCodeCollections"/>
    <!---->
    <!-- Definitions used for construction of filenames and extensions... -->
    <add key="ASCIIDocFileSuffix" value=".adoc"/>
    <add key="SOAPSchemaSuffix" value=".xsd"/>
    <add key="SOAPContractSuffix" value=".wsdl"/>
    <add key="XMIFileSuffix" value=".xmi"/>
    <add key="CompressedFileSuffix" value=".gz"/>
    <!---->
    <!-- Change the setting below to 'false' in order to reference common schemas by full pathname -->
    <add key="SchemaUseRelativePathName" value="true"/>
    <!---->
    <!-- Settings used for retrieval of tagged values used in documentation generation... -->
    <!-- The Tag List consists of tuples 'FrameworkConfigKey:TagName', in which the key defines whether the documentation tag must- or must not be generated -->
    <!-- The annotation body (DENotes) is treated separately from element tags. -->
    <add key="DocgenSourcePrefix" value="%NamespacePrefix%:tag:"/>
    <add key="DocgenTagList" value="DEBusinessTermName:businessTermName,DEDefinition:definition,DEDictionaryEntryName:dictionaryEntryName,DEUniqueID:uniqueID"/>
    <add key="DocgenAnnotation" value="DENotes:annotation"/>
    <add key="DocGenExampleKey" value="Example: "/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
    <!---->
    <!-- Name and namespace of the event handler configuration file... -->
    <add key="EventHandlerConfigFile" value="resources\EventHandlerConfig.xml"/>
    <add key="EventHandlerConfigNS" value="%NamespacePrefix%:framework:context:eventhandler"/>
    <!---->
    <!-- Schema implementations, key contains schema-type tag from settings form, value is corresponding Schema type...-->
    <add key="InterfaceType:SOAP" value="Framework.Util.SchemaManagement.XML.XMLSchema"/>
    <add key="InterfaceType:REST" value="Framework.Util.SchemaManagement.JSON.JSONSchema"/>
    <!---->
    <!-- List of all supported Capability Processors. Format is Class-Name:ProcessorImplementation -->
    <!-- Each key MUST start with 'CapabilityProcessor' and since config keys must be unique, must have a sequence number...-->
    <add key="CapabilityProcessor-01" value="CodeList:Plugin.Application.CapabilityModel.CodeList.ExcelExporter"/>
    <add key="CapabilityProcessor-02" value="CodeList:Plugin.Application.CapabilityModel.CodeList.GenericodeExporter"/>
    <add key="CapabilityProcessor-03" value="Message:Plugin.Application.CapabilityModel.SchemaGeneration.SchemaProcessor"/>
    <add key="CapabilityProcessor-04" value="SOAPInterface:Plugin.Application.CapabilityModel.API.APIProcessor"/>
    <add key="CapabilityProcessor-05" value="RESTInterface:Plugin.Application.CapabilityModel.API.OpenAPI20Processor"/>
  </appSettings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <webServices>
    <serviceDescriptionFormatExtensionTypes>
      <add type="JMSTopicBinding"/>
    </serviceDescriptionFormatExtensionTypes>
  </webServices>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="RestSharp" publicKeyToken="598062e77f915f75" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-105.2.3.0" newVersion="105.2.3.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
