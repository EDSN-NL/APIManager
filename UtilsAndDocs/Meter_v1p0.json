{
    "swagger": "2.0",
    "info": {
        "title": "Meter",
        "description": "Demo API",
        "termsOfService": "Terms of Service",
        "contact": {
            "name": "Wouter Meijers",
            "url": "http://www.enexis.nl",
            "email": "wouter.meijers@enexis.nl"
        },
        "license": {
            "name": "License name.",
            "url": "http://license.location.my-license"
        },
        "version": "1.0"
    },
    "host": "api.enexis.nl",
    "basePath": "/meter/v1",
    "schemes": ["https"],
    "produces": ["application/json"],
    "consumes": ["application/json"],
    "tags": [
        {
            "name": "meters",
            "description": "Collection of Meter resources"
        },
        {
            "name": "{meter-code}",
            "description": "Identifies a single meter."
        },
        {
            "name": "meter-readings",
            "description": "Readings from this meter."
        }
    ],
    "paths": {
        "/meters": {
            "post": {
                "tags": ["meters"],
                "summary": "Create a new meter resource.",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "meter",
                        "in": "body",
                        "description": "Meter is a component that is able to collect one or more measured values from a given location.",
                        "required": true,
                        "schema": {"$ref": "#/definitions/MeterType"}
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Unique identification for a correlated group of messages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "description": "Unique message identification.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Default 'catch-all' result code.",
                        "schema": {"$ref": "#/definitions/OperationResultType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["meters"],
                "summary": "List all meters in collection.",
                "operationId": "list",
                "parameters": [
                    {
                        "name": "meter-type",
                        "in": "query",
                        "description": "Filter by type of meter.",
                        "required": false,
                        "allowEmptyValue": false,
                        "type": "string"
                    },
                    {
                        "name": "vendor",
                        "in": "query",
                        "description": "Filter by vendor name",
                        "required": false,
                        "allowEmptyValue": false,
                        "type": "string"
                    },
                    {
                        "name": "max",
                        "in": "query",
                        "description": "Specifies the maximum number of records to return.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "after-id",
                        "in": "query",
                        "description": "Returns only records with an identifier greater then the specified ID (exclusive). This assumes that greater ID's are also more recent so the attribute can also be interpreted as \"newer then specified ID\".",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "before-id",
                        "in": "query",
                        "description": "Returns records with an identifier that is smaller or equal (inclusive) the specified ID. \r\nThis assumes that smaller ID's are also older so the attribute can also be interpreted as \"older or equal then specified ID\".",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Unique identification for a correlated group of messages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "description": "Unique message identification.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "total-count": {"type": "integer"},
                                "remaining-count": {"type": "integer"},
                                "more-indicator": {"type": "boolean"},
                                "data": {
                                    "type": "array",
                                    "items": {"$ref": "#/definitions/MeterType"}
                                }
                            }
                        },
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Default 'catch-all' result code.",
                        "schema": {"$ref": "#/definitions/OperationResultType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/{meter-code}": {
            "get": {
                "tags": ["{meter-code}"],
                "summary": "Retrieve meter details",
                "operationId": "getDetails",
                "parameters": [
                    {
                        "name": "meter-code",
                        "in": "path",
                        "description": "Unique identification of a meter.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Unique identification for a correlated group of messages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "description": "Unique message identification.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {"$ref": "#/definitions/MeterType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Default 'catch-all' result code.",
                        "schema": {"$ref": "#/definitions/OperationResultType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": ["{meter-code}"],
                "summary": "Update meter properties",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "meter-code",
                        "in": "path",
                        "description": "Unique identification of a meter.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "meter",
                        "in": "body",
                        "description": "Meter is a component that is able to collect one or more measured values from a given location.",
                        "required": true,
                        "schema": {"$ref": "#/definitions/MeterType"}
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Unique identification for a correlated group of messages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "description": "Unique message identification.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Default 'catch-all' result code.",
                        "schema": {"$ref": "#/definitions/OperationResultType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["{meter-code}"],
                "summary": "Delete meter from collection.",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "meter-code",
                        "in": "path",
                        "description": "Unique identification of a meter.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-Correlation-ID",
                        "in": "header",
                        "description": "Unique identification for a correlated group of messages.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "X-Request-ID",
                        "in": "header",
                        "description": "Unique message identification.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    },
                    "default": {
                        "description": "Default 'catch-all' result code.",
                        "schema": {"$ref": "#/definitions/OperationResultType"},
                        "headers": {
                            "X-Correlation-ID": {
                                "description": "Unique identification for a correlated group of messages.",
                                "type": "string"
                            },
                            "X-Request-ID": {
                                "description": "Unique message identification.",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/{meter-code}/meter-readings": {"get": {
            "tags": ["meter-readings"],
            "summary": "Retrieves meter readings for specified meter.",
            "operationId": "getReadings",
            "parameters": [
                {
                    "name": "meter-code",
                    "in": "path",
                    "description": "Unique identification of a meter.",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "by-timestamp",
                    "in": "query",
                    "description": "Filter by timestamp",
                    "required": false,
                    "allowEmptyValue": false,
                    "type": "string",
                    "format": "date-time"
                },
                {
                    "name": "max",
                    "in": "query",
                    "description": "Specifies the maximum number of records to return.",
                    "required": false,
                    "type": "integer"
                },
                {
                    "name": "after-id",
                    "in": "query",
                    "description": "Returns only records with an identifier greater then the specified ID (exclusive). This assumes that greater ID's are also more recent so the attribute can also be interpreted as \"newer then specified ID\".",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "before-id",
                    "in": "query",
                    "description": "Returns records with an identifier that is smaller or equal (inclusive) the specified ID. \r\nThis assumes that smaller ID's are also older so the attribute can also be interpreted as \"older or equal then specified ID\".",
                    "required": false,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "total-count": {"type": "integer"},
                            "remaining-count": {"type": "integer"},
                            "more-indicator": {"type": "boolean"},
                            "data": {
                                "type": "array",
                                "items": {"$ref": "#/definitions/MeterValueType"}
                            }
                        }
                    }
                },
                "default": {
                    "description": "Default 'catch-all' result code.",
                    "schema": {"$ref": "#/definitions/OperationResultType"}
                }
            }
        }}
    },
    "definitions": {
        "ChargingStationErrorEnumType": {
            "title": "ChargingStationErrorEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "ConnectorLockFailure",
                "EVCommunicationError",
                "GroundFailure",
                "HighTemperature",
                "InternalError",
                "LocalListConflict",
                "NoError",
                "OtherError",
                "OverCurrentFailure",
                "OverVoltage",
                "PowerMeterFailure",
                "PowerSwitchFailure",
                "ReaderFailure",
                "ResetFailure",
                "UnderVoltage",
                "WeakSignal"
            ]
        },
        "ConnectorStatusEnumType": {
            "title": "ConnectorStatusEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "Available",
                "Occupied",
                "Reserved",
                "Unavailable",
                "Faulted"
            ]
        },
        "EncodingMethodEnumType": {
            "title": "EncodingMethodEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "Other",
                "DLMS Message",
                "COSEM Protected Data",
                "EDL"
            ]
        },
        "OperationalStatusEnumType": {
            "title": "OperationalStatusEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "Inoperative",
                "Operative"
            ]
        },
        "ReasonEnumType": {
            "title": "ReasonEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "DeAuthorized",
                "EmergencyStop",
                "EnergyLimitReached",
                "EVDisconnected",
                "GroundFault",
                "ImmediateReset",
                "MasterPass",
                "Local",
                "OutOfCredit",
                "Other",
                "OvercurrentFault",
                "PowerLoss",
                "PowerQuality",
                "Reboot",
                "Remote",
                "SOCLimitReached",
                "StoppedByEV",
                "TimeLimitReached",
                "Timeout",
                "UnlockCommand"
            ]
        },
        "ResultClassificationCodeType": {
            "title": "ResultClassificationCodeType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "AuthenticationError",
                "AuthorizationError",
                "CommunicationError",
                "DataMissing",
                "DataValidationError",
                "Error",
                "NoDataFound",
                "ParameterError",
                "PartyBusy",
                "PartyUnavailable",
                "ProcessingError",
                "ResultLimitExceeded",
                "Success",
                "TooManyResults",
                "UnclassifiedError",
                "Warning"
            ]
        },
        "SignatureMethodEnumType": {
            "title": "SignatureMethodEnumType",
            "type": "string",
            "additionalProperties": false,
            "enum": [
                "ECDSAP256SHA256",
                "ECDSAP384SHA384",
                "ECDSA192SHA256"
            ]
        },
        "MeteringFunctionType": {
            "title": "MeteringFunctionType",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MeterValue": {
                    "title": "MeterValueListType",
                    "type": "array",
                    "items": {"$ref": "#/definitions/MeterValueType"},
                    "minItems": 1
                },
                "Transaction": {
                    "title": "TransactionListType",
                    "type": "array",
                    "items": {"$ref": "#/definitions/TransactionType"},
                    "minItems": 1
                }
            }
        },
        "MeterType": {
            "title": "MeterType",
            "description": "Meter is a component that is able to collect one or more measured values from a given location.\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Model": {
                    "title": "CI20TextType",
                    "description": "Defines the device model.",
                    "type": "string",
                    "maxLength": 20
                },
                "Type": {
                    "title": "DeviceType",
                    "description": "Specifies the type of the device.",
                    "type": "string",
                    "maxLength": 25
                },
                "SerialNumber": {
                    "title": "SerialNumberType",
                    "description": "Vendor-specific device identifier.",
                    "type": "string",
                    "maxLength": 25
                },
                "OperationalStatus": {
                    "title": "OperationalStatusEnumType",
                    "description": "Specifies the operational status of the device.",
                    "allOf": [{"$ref": "#/definitions/OperationalStatusEnumType"}]
                },
                "StatusCode": {
                    "title": "ConnectorStatusEnumType",
                    "description": "Current status of the associated device type.",
                    "allOf": [{"$ref": "#/definitions/ConnectorStatusEnumType"}]
                },
                "ErrorCode": {
                    "title": "ChargingStationErrorEnumType",
                    "description": "Generic set of error codes to be used by the associated device type.",
                    "allOf": [{"$ref": "#/definitions/ChargingStationErrorEnumType"}]
                },
                "Info": {
                    "title": "CI50TextListType",
                    "description": "Additional free format information related to the error.",
                    "type": "array",
                    "items": {
                        "title": "CI50TextType",
                        "type": "string",
                        "maxLength": 50
                    },
                    "minItems": 1
                },
                "VendorParty": {"$ref": "#/definitions/VendorType"},
                "DeviceFunction": {"$ref": "#/definitions/MeteringFunctionType"}
            },
            "required": ["DeviceFunction"]
        },
        "MeterValueType": {
            "title": "MeterValueType",
            "description": "Collection of one or more sampled values.\r\nAll sampled values in a MeterValue are sampled at the same point in time.\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Timestamp": {
                    "title": "DateTimeType",
                    "description": "Timestamp for measured value(s).",
                    "type": "string",
                    "format": "date-time"
                },
                "SampledValue": {
                    "title": "SampledValueListType",
                    "type": "array",
                    "items": {"$ref": "#/definitions/SampledValueType"},
                    "minItems": 1
                }
            },
            "required": ["Timestamp"]
        },
        "OperationResultType": {
            "title": "OperationResultType",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ResultClassificationCode": {
                    "title": "ResultClassificationCodeType",
                    "allOf": [{"$ref": "#/definitions/ResultClassificationCodeType"}]
                },
                "ResultCode": {
                    "title": "CodeType",
                    "type": "string"
                },
                "Annotation": {
                    "title": "TextListType",
                    "type": "array",
                    "items": {
                        "title": "TextType",
                        "type": "string"
                    },
                    "minItems": 1
                },
                "ApplicationResultCode": {
                    "title": "CodeType",
                    "type": "string"
                }
            },
            "required": [
                "ResultClassificationCode",
                "ResultCode"
            ]
        },
        "SampledValueType": {
            "title": "SampledValueType",
            "description": "Single sampled value in MeterValues. Each value can be accompanied by optional fields.\r\n\r\nTo save on mobile data usage, default values of all of the optional fields are such that. The value without any additional fields will be interpreted, as a register reading of active import energy in Wh (Watt-hour) units.\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SignedMeterValue": {"$ref": "#/definitions/SignedMeterValueType"},
                "UnitOfMeasure": {"$ref": "#/definitions/UnitOfMeasureType"}
            },
            "required": [
                "SignedMeterValue",
                "UnitOfMeasure"
            ]
        },
        "SignedMeterValueType": {
            "title": "SignedMeterValueType",
            "description": "Represent a signed version of the meter value.\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EncodedMeterValue": {
                    "title": "Base64String512Type",
                    "description": "Meter values as they were encoded before applying the digital signature algorithm.",
                    "type": "string",
                    "maxLength": 512
                },
                "EncodingMethod": {
                    "title": "EncodingMethodEnumType",
                    "description": "Method used to encode the meter values before applying the digital signature algorithm.",
                    "allOf": [{"$ref": "#/definitions/EncodingMethodEnumType"}]
                },
                "MeterValueSignature": {
                    "title": "Base64String2500Type",
                    "description": "Digital signature of the meter value.",
                    "type": "string",
                    "maxLength": 2500
                },
                "SignatureMethod": {
                    "title": "SignatureMethodEnumType",
                    "description": "Method used to create the digital signature.",
                    "allOf": [{"$ref": "#/definitions/SignatureMethodEnumType"}]
                }
            },
            "required": [
                "EncodedMeterValue",
                "EncodingMethod",
                "MeterValueSignature",
                "SignatureMethod"
            ]
        },
        "TransactionType": {
            "title": "TransactionType",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "title": "TransactionIdType",
                    "type": "string",
                    "maxLength": 36
                },
                "StartedTimestamp": {
                    "title": "DateTimeType",
                    "description": "Date and time at which the transaction has started.",
                    "type": "string",
                    "format": "date-time"
                },
                "StoppedTimestamp": {
                    "title": "DateTimeType",
                    "description": "Date and time at which the transaction has ended.",
                    "type": "string",
                    "format": "date-time"
                },
                "StoppedReason": {
                    "title": "ReasonEnumType",
                    "allOf": [{"$ref": "#/definitions/ReasonEnumType"}]
                }
            },
            "required": [
                "Id",
                "StartedTimestamp"
            ]
        },
        "UnitOfMeasureType": {
            "title": "UnitOfMeasureType",
            "description": "Represents a UnitOfMeasure with a multiplier\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Unit": {
                    "title": "CI20TextType",
                    "description": "Unit of the value. Default = \"Wh\" if the (default) measurand is an \"Energy\" type.\r\nThis field SHALL use a value from the list &lt;&lt;standardizedunitsofmeasure,Standardized Units of Measurements&gt;&gt;. \r\nIf an applicable unit is available in that list, otherwise a \"custom\" unit might be used.",
                    "type": "string",
                    "maxLength": 20
                },
                "Multiplier": {
                    "title": "IntegerType",
                    "description": "Multiplier, this value represents the exponent to base 10. I.e. multiplier 3 means 10 raised to the 3rd power. Default is 0.",
                    "type": "integer"
                }
            },
            "required": [
                "Unit",
                "Multiplier"
            ]
        },
        "VendorType": {
            "title": "VendorType",
            "description": "Used to identify the vendor that is associated with the device.\r\n",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "title": "VendorIdentifierType",
                    "description": "The id SHOULD be a value from the reversed DNS namespace, where the top tiers of the name, when reversed, should correspond to the publicly registered primary DNS name of the vendor organization.",
                    "type": "string",
                    "maxLength": 255
                },
                "Name": {
                    "title": "VendorNameType",
                    "description": "Identifies the vendor (not necessarily in a unique manner).",
                    "type": "string",
                    "maxLength": 20
                }
            },
            "required": [
                "Id",
                "Name"
            ]
        }
    }
}